{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Scheduler_1 = require('../Scheduler');\n\nvar AsyncScheduler = function (_super) {\n  __extends(AsyncScheduler, _super);\n\n  function AsyncScheduler() {\n    _super.apply(this, arguments);\n\n    this.actions = [];\n    /**\n     * A flag to indicate whether the Scheduler is currently executing a batch of\n     * queued actions.\n     * @type {boolean}\n     */\n\n    this.active = false;\n    /**\n     * An internal ID used to track the latest asynchronous task such as those\n     * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n     * others.\n     * @type {any}\n     */\n\n    this.scheduled = undefined;\n  }\n\n  AsyncScheduler.prototype.flush = function (action) {\n    var actions = this.actions;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    var error;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsyncScheduler;\n}(Scheduler_1.Scheduler);\n\nexports.AsyncScheduler = AsyncScheduler;","map":{"version":3,"sources":["/app/node_modules/ng5-slider/node_modules/rxjs/scheduler/AsyncScheduler.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Scheduler_1","require","AsyncScheduler","_super","apply","arguments","actions","active","scheduled","undefined","flush","action","push","error","execute","state","delay","shift","unsubscribe","Scheduler","exports"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxD,OAAK,IAAIC,CAAT,IAAcD,CAAd,EAAiB,IAAIA,CAAC,CAACE,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBF,CAAC,CAACE,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAR;;AAC1C,WAASE,EAAT,GAAc;AAAE,SAAKC,WAAL,GAAmBL,CAAnB;AAAuB;;AACvCA,EAAAA,CAAC,CAACM,SAAF,GAAcL,CAAC,KAAK,IAAN,GAAaM,MAAM,CAACC,MAAP,CAAcP,CAAd,CAAb,IAAiCG,EAAE,CAACE,SAAH,GAAeL,CAAC,CAACK,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,CAJD;;AAKA,IAAIK,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIC,cAAc,GAAI,UAAUC,MAAV,EAAkB;AACpCb,EAAAA,SAAS,CAACY,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtBC,IAAAA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB;;AACA,SAAKC,OAAL,GAAe,EAAf;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,KAAd;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKC,SAAL,GAAiBC,SAAjB;AACH;;AACDP,EAAAA,cAAc,CAACL,SAAf,CAAyBa,KAAzB,GAAiC,UAAUC,MAAV,EAAkB;AAC/C,QAAIL,OAAO,GAAG,KAAKA,OAAnB;;AACA,QAAI,KAAKC,MAAT,EAAiB;AACbD,MAAAA,OAAO,CAACM,IAAR,CAAaD,MAAb;AACA;AACH;;AACD,QAAIE,KAAJ;AACA,SAAKN,MAAL,GAAc,IAAd;;AACA,OAAG;AACC,UAAIM,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,KAAtB,EAA6BJ,MAAM,CAACK,KAApC,CAAZ,EAAwD;AACpD;AACH;AACJ,KAJD,QAISL,MAAM,GAAGL,OAAO,CAACW,KAAR,EAJlB,EAR+C,CAYX;;;AACpC,SAAKV,MAAL,GAAc,KAAd;;AACA,QAAIM,KAAJ,EAAW;AACP,aAAOF,MAAM,GAAGL,OAAO,CAACW,KAAR,EAAhB,EAAiC;AAC7BN,QAAAA,MAAM,CAACO,WAAP;AACH;;AACD,YAAML,KAAN;AACH;AACJ,GApBD;;AAqBA,SAAOX,cAAP;AACH,CAzCqB,CAyCpBF,WAAW,CAACmB,SAzCQ,CAAtB;;AA0CAC,OAAO,CAAClB,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n"]},"metadata":{},"sourceType":"script"}