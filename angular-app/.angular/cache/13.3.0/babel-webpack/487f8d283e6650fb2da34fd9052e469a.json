{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar async_1 = require('../scheduler/async');\n\nvar isDate_1 = require('../util/isDate');\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\n\n\nfunction delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  var absoluteDelay = isDate_1.isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\n\nexports.delay = delay;\n\nvar DelayOperator = function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n\n  return DelayOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar DelaySubscriber = function (_super) {\n  __extends(DelaySubscriber, _super);\n\n  function DelaySubscriber(destination, delay, scheduler) {\n    _super.call(this, destination);\n\n    this.delay = delay;\n    this.scheduler = scheduler;\n    this.queue = [];\n    this.active = false;\n    this.errored = false;\n  }\n\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification_1.Notification.createNext(value));\n  };\n\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  };\n\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification_1.Notification.createComplete());\n  };\n\n  return DelaySubscriber;\n}(Subscriber_1.Subscriber);\n\nvar DelayMessage = function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n\n  return DelayMessage;\n}();","map":{"version":3,"sources":["/app/node_modules/ng5-slider/node_modules/rxjs/operators/delay.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","async_1","require","isDate_1","Subscriber_1","Notification_1","delay","scheduler","async","absoluteDelay","isDate","delayFor","now","Math","abs","source","lift","DelayOperator","exports","call","subscriber","subscribe","DelaySubscriber","_super","destination","queue","active","errored","dispatch","state","length","time","shift","notification","observe","delay_1","max","schedule","unsubscribe","_schedule","add","scheduleNotification","message","DelayMessage","push","_next","value","Notification","createNext","_error","err","error","_complete","createComplete","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n"]},"metadata":{},"sourceType":"script"}