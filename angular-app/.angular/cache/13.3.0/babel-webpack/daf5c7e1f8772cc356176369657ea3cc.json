{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar QueueAction = function (_super) {\n  __extends(QueueAction, _super);\n\n  function QueueAction(scheduler, work) {\n    _super.call(this, scheduler, work);\n\n    this.scheduler = scheduler;\n    this.work = work;\n  }\n\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    } // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    } // Otherwise flush the scheduler starting with this action.\n\n\n    return scheduler.flush(this);\n  };\n\n  return QueueAction;\n}(AsyncAction_1.AsyncAction);\n\nexports.QueueAction = QueueAction;","map":{"version":3,"sources":["/app/node_modules/ng5-slider/node_modules/rxjs/scheduler/QueueAction.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","AsyncAction_1","require","QueueAction","_super","scheduler","work","call","schedule","state","delay","flush","execute","closed","_execute","requestAsyncId","id","AsyncAction","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n"]},"metadata":{},"sourceType":"script"}