{"version":3,"file":"lightbox.service.js","sources":["lightbox.service.js"],"names":[],"mappings":"AAAA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;kCAAiB;AACjB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar lightbox_component_1 = require(\"./lightbox.component\");\nvar lightbox_config_service_1 = require(\"./lightbox-config.service\");\nvar lightbox_event_service_1 = require(\"./lightbox-event.service\");\nvar lightbox_overlay_component_1 = require(\"./lightbox-overlay.component\");\nvar common_1 = require(\"@angular/common\");\nvar Lightbox = /** @class */ (function () {\n    function Lightbox(_componentFactoryResolver, _injector, _applicationRef, _lightboxConfig, _lightboxEvent, _documentRef) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._injector = _injector;\n        this._applicationRef = _applicationRef;\n        this._lightboxConfig = _lightboxConfig;\n        this._lightboxEvent = _lightboxEvent;\n        this._documentRef = _documentRef;\n    }\n    Lightbox.prototype.open = function (album, curIndex, options) {\n        var _this = this;\n        if (curIndex === void 0) { curIndex = 0; }\n        if (options === void 0) { options = {}; }\n        var overlayComponentRef = this._createComponent(lightbox_overlay_component_1.LightboxOverlayComponent);\n        var componentRef = this._createComponent(lightbox_component_1.LightboxComponent);\n        var newOptions = {};\n        // broadcast open event\n        this._lightboxEvent.broadcastLightboxEvent({ id: lightbox_event_service_1.LIGHTBOX_EVENT.OPEN });\n        Object.assign(newOptions, this._lightboxConfig, options);\n        // attach input to lightbox\n        componentRef.instance.album = album;\n        componentRef.instance.currentImageIndex = curIndex;\n        componentRef.instance.options = newOptions;\n        componentRef.instance.cmpRef = componentRef;\n        // attach input to overlay\n        overlayComponentRef.instance.options = newOptions;\n        overlayComponentRef.instance.cmpRef = overlayComponentRef;\n        // FIXME: not sure why last event is broadcasted (which is CLOSED) and make\n        // lightbox can not be opened the second time.\n        // Need to timeout so that the OPEN event is set before component is initialized\n        setTimeout(function () {\n            _this._applicationRef.attachView(overlayComponentRef.hostView);\n            _this._applicationRef.attachView(componentRef.hostView);\n            overlayComponentRef.onDestroy(function () {\n                _this._applicationRef.detachView(overlayComponentRef.hostView);\n            });\n            componentRef.onDestroy(function () {\n                _this._applicationRef.detachView(componentRef.hostView);\n            });\n            var containerElement = newOptions.containerElementResolver(_this._documentRef);\n            containerElement.appendChild(overlayComponentRef.location.nativeElement);\n            containerElement.appendChild(componentRef.location.nativeElement);\n        });\n    };\n    Lightbox.prototype.close = function () {\n        if (this._lightboxEvent) {\n            this._lightboxEvent.broadcastLightboxEvent({ id: lightbox_event_service_1.LIGHTBOX_EVENT.CLOSE });\n        }\n    };\n    Lightbox.prototype._createComponent = function (ComponentClass) {\n        var factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);\n        var component = factory.create(this._injector);\n        return component;\n    };\n    Lightbox = __decorate([\n        core_1.Injectable(),\n        __param(5, core_1.Inject(common_1.DOCUMENT)),\n        __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver,\n            core_1.Injector,\n            core_1.ApplicationRef,\n            lightbox_config_service_1.LightboxConfig,\n            lightbox_event_service_1.LightboxEvent,\n            Document])\n    ], Lightbox);\n    return Lightbox;\n}());\nexports.Lightbox = Lightbox;\n"]}