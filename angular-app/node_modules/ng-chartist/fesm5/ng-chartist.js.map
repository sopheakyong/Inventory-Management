{"version":3,"file":"ng-chartist.js.map","sources":["ng://ng-chartist/lib/chartist.component.ts","ng://ng-chartist/lib/chartist.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\n\nimport * as Chartist from 'chartist';\nimport { IChartistBase, IChartOptions } from 'chartist';\n\n/**\n * Possible chart types\n */\nexport type ChartType = 'Pie' | 'Bar' | 'Line';\n\nexport type ChartInterfaces =\n  | Chartist.IChartistPieChart\n  | Chartist.IChartistBarChart\n  | Chartist.IChartistLineChart;\nexport type ChartOptions =\n  | Chartist.IBarChartOptions\n  | Chartist.ILineChartOptions\n  | Chartist.IPieChartOptions;\nexport type ResponsiveOptionTuple = Chartist.IResponsiveOptionTuple<\n  ChartOptions\n>;\nexport type ResponsiveOptions = ResponsiveOptionTuple[];\n\n/**\n * Represents chart events.\n */\nexport interface ChartEvent {\n  [eventName: string]: (data: any) => void;\n}\n\n/**\n * Angular component which renders Chartist chart.\n *\n * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and\n * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.\n * ### Example\n ```html\n <x-chartist\n   [type]=\"type\"\n   [data]=\"data\"\n   [options]=\"options\"\n   [responsiveOptions]=\"responsiveOptions\"\n   [events]=\"events\"\n ></x-chartist>\n ```\n */\n@Component({\n  selector: 'x-chartist',\n  template: '',\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `\n  ]\n})\nexport class ChartistComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The data object that needs to consist of a labels and a series array.\n   */\n  @Input()\n  data: Chartist.IChartistData;\n\n  /**\n   * Chartist chart type.\n   */\n  @Input()\n  type: ChartType;\n\n  /**\n   * The options object which overrides the default options.\n   */\n  @Input()\n  options: Chartist.IChartOptions;\n\n  /**\n   * An array of responsive option arrays which are a media query and options object pair: [[mediaQueryString, optionsObject],[more...]]\n   */\n  @Input()\n  responsiveOptions: ResponsiveOptions;\n\n  /**\n   * Events object where keys are Chartist event names and values are event handler functions.\n   *\n   * Supported events are: draw, optionsChanged, data, animationBegin, animationEnd, created.\n   *\n   * Event handler function will receive a data argument which contains event data.\n   */\n  @Input()\n  events: ChartEvent;\n\n  /**\n   * Event emitted after Chartist chart has been initialized.\n   *\n   * Event handler function will receive chart instance argument.\n   */\n  @Output()\n  initialized = new EventEmitter<ChartInterfaces>();\n\n  /** @ignore */\n  private chart: ChartInterfaces;\n\n  /** @ignore */\n  constructor(private elementRef: ElementRef) {}\n\n  /** @ignore */\n  ngOnInit(): void {\n    if (this.type && this.data) {\n      this.renderChart();\n    }\n  }\n\n  /** @ignore */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update(changes);\n  }\n\n  /** @ignore */\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.detach();\n      this.chart = null;\n    }\n  }\n\n  /** @ignore */\n  private renderChart() {\n    const nativeElement = this.elementRef.nativeElement;\n\n    if (!(this.type in Chartist)) {\n      throw new Error(`${this.type} is not a valid chart type`);\n    }\n\n    this.chart = (<any>Chartist)[this.type](\n      nativeElement,\n      this.data,\n      this.options,\n      this.responsiveOptions\n    );\n\n    if (this.events) {\n      this.bindEvents();\n    }\n\n    this.initialized.emit(this.chart);\n  }\n\n  /** @ignore */\n  private update(changes: SimpleChanges): void {\n    if (!this.type || !this.data) {\n      return;\n    }\n\n    if (!this.chart || 'type' in changes) {\n      this.renderChart();\n    } else if (changes.data || changes.options) {\n      (<IChartistBase<IChartOptions>>this.chart).update(\n        this.data,\n        this.options\n      );\n    }\n  }\n\n  /** @ignore */\n  private bindEvents(): void {\n    for (const event of Object.keys(this.events)) {\n      this.chart.on(event, this.events[event]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartistComponent } from './chartist.component';\n\n@NgModule({\n  declarations: [ChartistComponent],\n  imports: [],\n  exports: [ChartistComponent]\n})\nexport class ChartistModule {}\n"],"names":["tslib_1.__values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwDA;;IA0DE,2BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;;;;;;QAN1C,gBAAW,GAAG,IAAI,YAAY,EAAmB,CAAC;KAMJ;;;;;;IAG9C,oCAAQ;;;;IAAR;QACE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;;;;;;;IAGD,uCAAW;;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACtB;;;;;;IAGD,uCAAW;;;;IAAX;QACE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;KACF;;;;;;;IAGO,uCAAW;;;;;IAAnB;;YACQ,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;QAEnD,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAI,IAAI,CAAC,IAAI,+BAA4B,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,KAAK,GAAG,oBAAM,QAAQ,IAAE,IAAI,CAAC,IAAI,CAAC,CACrC,aAAa,EACb,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,iBAAiB,CACvB,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;;;;;;;;IAGO,kCAAM;;;;;;IAAd,UAAe,OAAsB;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAC5B,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YACpC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE;YAC1C,oBAA+B,IAAI,CAAC,KAAK,IAAE,MAAM,CAC/C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,CACb,CAAC;SACH;KACF;;;;;;;IAGO,sCAAU;;;;;IAAlB;;;YACE,KAAoB,IAAA,KAAAA,SAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,gBAAA,4BAAE;gBAAzC,IAAM,OAAK,WAAA;gBACd,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAK,CAAC,CAAC,CAAC;aAC1C;;;;;;;;;KACF;;gBA3HF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,EAAE;6BAEV,yDAIC;iBAEJ;;;;gBAhEC,UAAU;;;uBAqET,KAAK;uBAML,KAAK;0BAML,KAAK;oCAML,KAAK;yBAUL,KAAK;8BAQL,MAAM;;IAyET,wBAAC;CA5HD;;;;;;ACxDA;IAGA;KAK8B;;gBAL7B,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B;;IAC4B,qBAAC;CAL9B;;;;;;;;;;;;;;"}
